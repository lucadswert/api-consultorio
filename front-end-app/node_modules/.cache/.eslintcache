[{"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/index.js":"1","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/config/Rotas/index.js":"2","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Listar/index.js":"3","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Cadastros/index.js":"4","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Header/index.js":"5","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Consultas/index.js":"6","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Home/index.js":"7","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Cadastros/Paciente/index.js":"8","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Cadastros/Medico/index.js":"9","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Consultas/Marcar/index.js":"10","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Consultas/Desmarcar/index.js":"11","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Listar/Medicos/index.js":"12","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Listar/Pacientes/index.js":"13","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Editar/Paciente/index.js":"14","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Editar/Medico/index.js":"15","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/config/API/index.js":"16"},{"size":245,"mtime":1688325537806,"results":"17","hashOfConfig":"18"},{"size":1995,"mtime":1688454737700,"results":"19","hashOfConfig":"18"},{"size":1095,"mtime":1688409372903,"results":"20","hashOfConfig":"18"},{"size":1091,"mtime":1688392491297,"results":"21","hashOfConfig":"18"},{"size":551,"mtime":1688392350013,"results":"22","hashOfConfig":"18"},{"size":1041,"mtime":1688394611191,"results":"23","hashOfConfig":"18"},{"size":205,"mtime":1688406944200,"results":"24","hashOfConfig":"18"},{"size":4345,"mtime":1688446849547,"results":"25","hashOfConfig":"18"},{"size":4925,"mtime":1688448209519,"results":"26","hashOfConfig":"18"},{"size":1574,"mtime":1688448309864,"results":"27","hashOfConfig":"18"},{"size":1595,"mtime":1688450155344,"results":"28","hashOfConfig":"18"},{"size":2881,"mtime":1688450219325,"results":"29","hashOfConfig":"18"},{"size":2569,"mtime":1688450209079,"results":"30","hashOfConfig":"18"},{"size":5999,"mtime":1688455222967,"results":"31","hashOfConfig":"18"},{"size":5347,"mtime":1688454392424,"results":"32","hashOfConfig":"18"},{"size":117,"mtime":1688407506193,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m0nelj",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/index.js",[],[],"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/config/Rotas/index.js",[],[],"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Listar/index.js",[],[],"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Cadastros/index.js",[],[],"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Header/index.js",[],[],"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Consultas/index.js",[],[],"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Home/index.js",[],[],"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Cadastros/Paciente/index.js",[],[],"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Cadastros/Medico/index.js",[],[],"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Consultas/Marcar/index.js",["87"],[],"import API from \"../../../config/API\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nexport default function MarcarConsulta() {\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Evita o comportamento padrão de recarregar a página\r\n\r\n    const idPaciente = event.target.idPaciente.value;\r\n    const idMedico = event.target.idMedico.value;\r\n    const data = event.target.dataHora.value;\r\n\r\n    const formData = {\r\n      idPaciente,\r\n      idMedico,\r\n      data,\r\n    };\r\n\r\n    \r\n    try {\r\n        const response = await API.post('/consultas', formData);\r\n        alert(\"Consulta marcada com sucesso!\");\r\n    } catch (error) {\r\n        alert(\"Erro ao marcar consulta!\");\r\n        console.log(formData); // Imprime o objeto formData no console\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"marcar-consulta\">\r\n      <h1 className=\"titulo\">Cadastro de Médicos</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"pergunta\" htmlFor=\"idPaciente\">\r\n          ID do Paciente:\r\n        </label>\r\n        <input type=\"text\" id=\"idPaciente\" name=\"idPaciente\" required />\r\n\r\n        <label className=\"pergunta\" htmlFor=\"idMedico\">\r\n          ID do Médico:\r\n        </label>\r\n        <input type=\"text\" id=\"idMedico\" name=\"idMedico\" required />\r\n\r\n        <label className=\"pergunta\" htmlFor=\"dataHora\">\r\n          Data/Hora da Consulta:\r\n        </label>\r\n        <input type=\"datetime-local\" id=\"dataHora\" name=\"dataHora\" required />\r\n\r\n        <input type=\"submit\" value=\"Marcar Consulta\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Consultas/Desmarcar/index.js",["88"],[],"import API from \"../../../config/API\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nexport default function DesmarcarConsulta() {\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Evita o comportamento padrão de recarregar a página\r\n\r\n    const idConsulta = event.target.idConsulta.value;\r\n    const motivo = event.target.motivo.value;\r\n\r\n    const formData = {\r\n      idConsulta,\r\n      motivo,\r\n    };\r\n\r\n    try {\r\n      const response = await API.delete(`/consultas/${idConsulta}`, { data: formData });\r\n      alert(\"Consulta desmarcada com sucesso!\");\r\n    } catch (error) {\r\n      alert(\"Erro ao desmarcar consulta!\");\r\n      console.log(formData); // Imprime o objeto formData no console\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Cancelar-consulta\">\r\n      <h1 className=\"titulo\">Cancelar Consulta</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"pergunta\" htmlFor=\"idConsulta\">\r\n          ID da Consulta:\r\n        </label>\r\n        <input type=\"text\" id=\"idConsulta\" name=\"idConsulta\" required />\r\n\r\n        <label className=\"pergunta\" htmlFor=\"motivo\">\r\n          Motivo do Cancelamento:\r\n        </label>\r\n        <select id=\"motivo\" name=\"motivo\" required>\r\n          <option value=\"\">Selecione o motivo</option>\r\n          <option value=\"PACIENTE_DESISTIU\">Paciente desistiu</option>\r\n          <option value=\"MEDICO_CANCELOU\">Médico cancelou</option>\r\n          <option value=\"OUTROS\">Outros</option>\r\n        </select>\r\n\r\n        <input type=\"submit\" value=\"Cancelar Consulta\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Listar/Medicos/index.js",["89"],[],"import { useEffect, useState } from \"react\";\r\nimport API from \"../../../config/API\";\r\nimport \"./index.css\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function ListarMedicos() {\r\n    const [medicos, setMedicos] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function loadMedicos() {\r\n            const response = await API.get(\"/medicos\")\r\n            setMedicos(response.data)\r\n            console.log(response.data)\r\n        }\r\n        loadMedicos();\r\n\r\n    }, [])\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await API.delete(`/medicos/${id}`);\r\n            setMedicos(medicos.filter(medico => medico.id !== id));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"py-4\">\r\n                <table className=\"table border shadow\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">ID</th>\r\n                            <th scope=\"col\">NOME</th>\r\n                            <th scope=\"col\">EMAIL</th>\r\n                            <th scope=\"col\">CRM</th>\r\n                            <th scope=\"col\">ESPECIALIDADE</th>\r\n                            <th scope=\"col\">Editar</th>\r\n                            <th scope=\"col\">Apagar</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {medicos.map((medico, index) => (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{index + 1}</th>\r\n                                <td>{medico.nome}</td>\r\n                                <td>{medico.email}</td>\r\n                                <td>{medico.crm}</td>\r\n                                <td>{medico.especialidade}</td>\r\n                                <td>\r\n                                    <Link\r\n                                        className=\"btn btn-outline-primary mx-2\"\r\n                                        to={`/editar-medico/${medico.id}`}\r\n                                    >\r\n                                        Editar\r\n                                    </Link>\r\n                                </td>\r\n                                <td>\r\n                                    <button\r\n                                        className=\"botaoApagar\"\r\n                                        onClick={() => handleDelete(medico.id)}\r\n                                    >\r\n                                        Apagar\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Listar/Pacientes/index.js",["90"],[],"import { useEffect, useState } from \"react\";\r\nimport API from \"../../../config/API\";\r\nimport \"./index.css\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function ListarPacientes() {\r\n    const[pacientes, setPacientes]=useState([])\r\n\r\n    useEffect(()=>{\r\n        async function loadPacientes(){\r\n            const response = await API.get(\"/pacientes\")\r\n            setPacientes(response.data)\r\n            console.log(response.data)\r\n        }\r\n        \r\n        loadPacientes();\r\n    },[])\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await API.delete(`/pacientes/${id}`);\r\n            setPacientes(pacientes.filter(paciente => paciente.id !== id));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"py-4\">\r\n                <table className=\"table border shadow\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">NOME</th>\r\n                    <th scope=\"col\">EMAIL</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Editar</th>\r\n                    <th scope=\"col\">Apagar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {pacientes.map((pacientes, index) => (\r\n                    <tr>\r\n                        <th scope=\"row\" key={index}>\r\n                        {index + 1}\r\n                        </th>\r\n                        <td>{pacientes.nome}</td>\r\n                        <td>{pacientes.email}</td>\r\n                        <td>{pacientes.cpf}</td>\r\n                        <td>\r\n                        <Link\r\n                            className=\"btn btn-outline-primary mx-2\"\r\n                            to={`/editar-paciente/${pacientes.id}`}\r\n                        >\r\n                            Editar\r\n                        </Link>\r\n                        </td>\r\n                        <td>\r\n                            <button\r\n                                className=\"botaoApagar\"\r\n                                onClick={() => handleDelete(pacientes.id)}\r\n                            >\r\n                                Apagar\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    ))}\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n    </div>\r\n    )\r\n  }","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Editar/Paciente/index.js",[],[],"/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/components/Editar/Medico/index.js",["91"],[],"import { useEffect, useState } from \"react\";\r\nimport API from \"../../../config/API\";\r\nimport \"./index.css\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function ListarMedicoPorId() {\r\n  const [medico, setMedico] = useState(null);\r\n  const [nome, setNome] = useState(\"\");\r\n  const [telefone, setTelefone] = useState(\"\");\r\n  const [endereco, setEndereco] = useState({\r\n    logradouro: \"\",\r\n    numero: \"\",\r\n    complemento: \"\",\r\n    bairro: \"\",\r\n    cidade: \"\",\r\n    uf: \"\",\r\n    cep: \"\"\r\n  });\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    async function loadMedico() {\r\n      try {\r\n        const response = await API.get(`/medicos/${id}`);\r\n        setMedico(response.data);\r\n        setNome(response.data.nome);\r\n        setTelefone(response.data.telefone);\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    loadMedico();\r\n  }, [id]);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await API.delete(`/medicos/${id}`);\r\n      setMedico(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      const updatedMedico = {\r\n        ...medico,\r\n        nome: nome,\r\n        telefone: telefone,\r\n        endereco: endereco\r\n      };\r\n      await API.put(`/medicos/${medico.id}`, updatedMedico);\r\n      alert(\"Dados atualizados com sucesso!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  if (!medico) {\r\n    return <div>Carregando...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"py-4\">\r\n        <table className=\"table border shadow\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">NOME</th>\r\n              <th scope=\"col\">EMAIL</th>\r\n              <th scope=\"col\">CRM</th>\r\n              <th scope=\"col\">ESPECIALIDADE</th>\r\n              <th scope=\"col\">TELEFONE</th>\r\n              <th scope=\"col\">LOGRADOURO</th>\r\n              <th scope=\"col\">NÚMERO</th>\r\n              <th scope=\"col\">COMPLEMENTO</th>\r\n              <th scope=\"col\">BAIRRO</th>\r\n              <th scope=\"col\">CIDADE</th>\r\n              <th scope=\"col\">UF</th>\r\n              <th scope=\"col\">CEP</th>\r\n              <th scope=\"col\">Editar</th>\r\n              <th scope=\"col\">Apagar</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">{medico.id}</th>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={nome}\r\n                  onChange={(e) => setNome(e.target.value)}\r\n                />\r\n              </td>\r\n              <td>{medico.email}</td>\r\n              <td>{medico.crm}</td>\r\n              <td>{medico.especialidade}</td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={telefone}\r\n                  onChange={(e) => setTelefone(e.target.value)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={endereco.logradouro}\r\n                  onChange={(e) => setEndereco({ ...endereco, logradouro: e.target.value })}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={endereco.numero}\r\n                  onChange={(e) => setEndereco({ ...endereco, numero: e.target.value })}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={endereco.complemento}\r\n                  onChange={(e) => setEndereco({ ...endereco, complemento: e.target.value })}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={endereco.bairro}\r\n                  onChange={(e) => setEndereco({ ...endereco, bairro: e.target.value })}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={endereco.cidade}\r\n                  onChange={(e) => setEndereco({ ...endereco, cidade: e.target.value })}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={endereco.uf}\r\n                  onChange={(e) => setEndereco({ ...endereco, uf: e.target.value })}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={endereco.cep}\r\n                  onChange={(e) => setEndereco({ ...endereco, cep: e.target.value })}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button className=\"btn btn-outline-primary mx-2\" onClick={handleUpdate}>\r\n                  Atualizar\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"botaoApagar\"\r\n                  onClick={() => handleDelete(medico.id)}\r\n                >\r\n                  Apagar\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/Users/gabrielfraga/coding/college_stuff/api-consultorio/front-end-app/src/config/API/index.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":21,"column":15,"nodeType":"94","messageId":"95","endLine":21,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":18,"column":13,"nodeType":"94","messageId":"95","endLine":18,"endColumn":21},{"ruleId":"92","severity":1,"message":"96","line":5,"column":16,"nodeType":"94","messageId":"95","endLine":5,"endColumn":25},{"ruleId":"92","severity":1,"message":"96","line":5,"column":16,"nodeType":"94","messageId":"95","endLine":5,"endColumn":25},{"ruleId":"92","severity":1,"message":"97","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":14},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'Link' is defined but never used."]